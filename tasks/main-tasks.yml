# For RockyLinux, also need to enable the Powertools repo with "dnf
# config-manager --set-enabled powertools".
# etckeeper do not seem to need anything from the Powertools repo but keep
# that in mind for proper EPEL repo activation, per
# https://docs.fedoraproject.org/en-US/epel/#_quickstart
- name: CentOS, Rocky or AlmaLinux - Install EPEL repo
  package:
   name: epel-release
   state: present
  when: ansible_distribution in ['CentOS', 'Rocky', 'AlmaLinux']

# On debian, installing the etckeeper package seems to put /etc
# under version control immediately.
# Other distributions have a different philosophy though.
- name: Install etckeeper
  package:
    name: etckeeper
    state: present


# 1/2 Run command task conditionally, to provide accurate "changed" status
- name: ensure | etckeeper repo is created
  command: etckeeper init
  args:
    creates: /etc/.etckeeper

# 2/2 The condition must now hold.  This "fixes" ansible check mode.
- name: check  | etckeeper repo is created
  command: test -f /etc/.etckeeper
  changed_when: False
  check_mode: False


# 1. git requires an "email address" for its commits.
# 2. It will "autodetect", but only if hostname can be resolved to an FQDN,
#    or a name has been provided in /etc/mailname.
# 3. etckeeper provides an email address, but in older versions it only does
#    this when sudo is used, or when etckeeper is run from a tty.
#
# This leaves us with a couple of cases where etckeeper will fail,
# so we need to make sure to provide user.email in the git config.
#
# https://etckeeper.branchable.com/todo/requires___96__user.email__96___be_set_under_undocumented_circumstances/

# 1/3 Query condition
- name: query  | git user.email is set, at least for this repo
  environment:
    GIT_DIR: /etc/.git
  command: git config --get user.email
  register: git_user_email
  failed_when: False
  changed_when: False
  check_mode: False

# 2/3 Run command task conditionally, to provide accurate "changed" status
- name: ensure | git user.email is set, at least for this repo
  environment:
    GIT_DIR: /etc/.git
  command: git config --local user.email root@{{ ansible_hostname }}
  when: git_user_email.rc != 0

# 3/3 The condition must now hold.  This "fixes" ansible check mode.
- name: check  | git user.email is set, at least for this repo
  environment:
    GIT_DIR: /etc/.git
  command: git config --get user.email
  register: git_user_email
  changed_when: False
  check_mode: False


# Save the original contents of /etc.
# Same idea that justifies etckeeper automatic commits after package install.
#
# After this first commit, I don't care about integration with ansible.
# There's no way to run after the play is complete, even if we wanted to.
# (However you could create another role, etckeeper-commit, to wrap
#  your other roles with).
#
# 1/3 Query condition
- name: query  | etckeeper has initial commit
  environment:
    GIT_DIR: /etc/.git
  command: git rev-parse HEAD
  register: etckeeper_has_commit
  failed_when: False
  changed_when: False
  check_mode: False

# 2/3 Run command task conditionally, to provide accurate "changed" status
- name: ensure | etckeeper has initial commit
  command: etckeeper commit 'Initial commit (by ansible role)'
  when: etckeeper_has_commit.rc != 0

# 3/3 The condition must now hold.  This "fixes" ansible check mode.
- name: check  | etckeeper has initial commit
  environment:
    GIT_DIR: /etc/.git
  command: git rev-parse HEAD
  changed_when: False
  check_mode: False
